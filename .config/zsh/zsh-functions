# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
        # For completions
        completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
        fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
        completion_file="$(basename "${completion_file_path}")"
        if [ "$2" = true ] && compinit "${completion_file:1}"
}

function acp() {
  git add .
  git commit -m "$1"
  git push
}

ee() { # wrapper around gpg to edit encrypted files with $EDITOR
    # get file info and a temporary file name
    [ ! "$1" ] && return 1

    file="$1"
    tmp="$(mktemp -u).$(basename "$file")"

    [ -e "$file" ] # file exists?
    file_exists=$?

    file -b "$file" | grep -Eq '^GPG symmetrically encrypted data \(AES256 cipher\)$' # file is encrypted?
    file_is_enc=$?

    # if it is encrypted, decrypt it
    if [ $file_is_enc -eq 0 ]; then
        #                                                                            exit 1 on error
        gpg --output "$tmp" -d --cipher-algo AES256 --pinentry-mode loopback "$file" || return 1
    fi

    # if it did NOT get decrypted AND it exists, just edit it normally and exit
    if [ $file_is_enc -ne 0 ] && [ $file_exists -eq 0 ]; then
    #                   exit after
        $EDITOR "$file" && return 0
    fi

    [ $file_is_enc -eq 0 ] && cp "$tmp" "$tmp.orig" # if it did get decrypted, copy tmp to another tmpfile for comparison

    $EDITOR "$tmp" # open editor

    [ $file_is_enc -eq 0 ] || [ ! -e "$file" ] # original file got decrypted OR original file does not exist?
    should_enc=$?

    [ -e "$tmp" ] # tmpfile exists?
    tmp_exists=$?

    ! diff -Nq "$tmp" "$tmp.orig" > /dev/null 2>&1 # tmpfile differs from the tmpfile copy?
    tmp_modified=$?

    file -b "$tmp" | grep -Eqv '^empty$|^very short file \(no magic\)$' # tmpfile NOT empty or short?
    tmp_empty=$?

    # if all those conditions are met, encrypt
    [ $should_enc -eq 0 ] && [ $tmp_exists -eq 0 ] && [ $tmp_modified -eq 0 ] && [ $tmp_empty -eq 0 ] &&\
        gpg --output "$file" -c --cipher-algo AES256 --pinentry-mode loopback --no-symkey-cache "$tmp"

    # remove tmpfiles
    rm -f "$tmp" "$tmp.orig"
}
